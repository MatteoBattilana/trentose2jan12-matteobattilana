swagger: "2.0"
info:
  version: 1.0.0
  title: "trentose2jan12-matteobattilana"
  description: A sample API that uses a set of astronauts as an example.
  termsOfService: http://swagger.io/terms/
  contact:
    name: Matteo Battilana
    email: matteo.battilana@studenti.unitn.it
    url: https://github.com/MatteoBattilana/trentose2jan12-matteobattilana
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: trentose2jan12-matteobattilana.herokuapp.com
basePath: /astronauts
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    get:
      description: Retrieves all the astronauts
      operationId: getAstronauts
      responses:
        200:
          description: list of astronauts
          schema:
            type: array
            items:
              $ref: '#/definitions/Astronauts'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Uploads a new astronaut
      operationId: addAstronaut
      parameters:
        - name: astronaut
          in: body
          description: new astronaut
          required: true
          schema:
            $ref: '#/definitions/NewAstronaut'
      responses:
        201:
          description: assignment created response
          schema:
            $ref: '#/definitions/Astronauts'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /{id}:
    get:
      description: Returns an astronaut by id
      operationId: findbyastronaut id
      parameters:
        - name: id
          in: path
          description: ID of astronaut to fetch
          required: true
          type: string
          x-example: 'some-example'
      responses:
        200:
          description: OK - assignment
          schema:
            $ref: '#/definitions/Astronauts'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      description: Updates an existing astronaut
      operationId: updateAstronaut
      parameters:
        - name: id
          in: path
          description: ID of astronaut to edit
          required: true
          type: string
          x-example: 'some-example'
        - name: astronaut
          in: body
          description: astronaut
          required: true
          schema:
            $ref: '#/definitions/Astronauts'
      responses:
        202:
          description: astronaut update response
          schema:
            $ref: '#/definitions/Astronauts'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /search/{lastName}:
    get:
      description: Retrieves all the astronauts with lastName contained in the lastName astronaut property
      operationId: getAstronautsByLastName
      parameters:
        - name: lastName
          in: path
          description: ID of astronaut to fetch
          required: true
          type: string
          x-example: 'some-example'
      responses:
        200:
          description: list of astronauts with lastName contained in the lastName astronaut property
          schema:
            type: array
            items:
              $ref: '#/definitions/Astronauts'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  Astronauts:
    allOf:
      - $ref: '#/definitions/NewAstronaut'
      - required:
        - astronautID
        properties:
          astronautID:
            type: string
  NewAstronaut:
    required:
      - firstName
      - lastName
      - isInSpace
    properties:
      firstName:
        type: string
      lastName:
        type: string
      isInSpace:
        type: boolean
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string